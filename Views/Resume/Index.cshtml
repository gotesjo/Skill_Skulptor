@model SkillSkulptor.Models.ResumeViewModel
@{
    ViewData["Title"] = "Mitt CV";
}

<div class="container-fluid p-0">
    @if (Model.UserCV == null)
    {
        <section class="resume-section" id="no-cv">
            <div class="resume-section-content">
                <h2>Inget CV hittades för @Model.User.Firstname @Model.User.Lastname</h2>
                <p>För att skapa ditt CV, klicka på knappen nedan.</p>
                <a class="btn btn-primary" asp-controller="Resume" asp-action="CreateCV">Skapa Mitt CV</a>
            </div>
        </section>
    }
    else
    {
        <section class="resume-section" id="about">
            <div class="resume-section-content">
                <div class="mb-3">
                    <img src="@(Model.User.fkPicture?.ImageData != null ? Url.Action("UserImage", "Profile", new { userId = Model.User.Id }) : Url.Content("~/datafiles/pictures/default-profile.jpg"))"
                         alt="Profilbild"
                         class="img-thumbnail img-responsive mb-3"
                         style="max-width: 300px; height: auto;" />
                </div>

                <h1 class="mb-0">
                    @Model.User.Firstname
                    <span class="text-primary">@Model.User.Lastname</span>
                </h1>
                @if (Model.User.fkAddress != null)
                {
                    <div class="subheading mb-5">
                        @Model.User.fkAddress.Street · @Model.User.fkAddress.City · @Model.User.fkAddress.ZipCode · @Model.User.fkAddress.Country
                        <a href="mailto:@Model.User.Email">@Model.User.Email</a>
                    </div>
                }
                <h2 class="mb-5">Kort om mig</h2>
                <p class="lead mb-5">@Model.User.userCV?.Summary</p>
                <hr class="m-5" />
                 
               


                @if (Model.User.userCV.Experiences != null)
                {
                    <h2 class="mb-5">Erfarenheter</h2>
                    @foreach (var experience in Model.User.userCV.Experiences)
                    {
                        <div class="mb-3">
                            <h3 class="mb-0">@experience.Position hos @experience.Employer</h3>
                            <p class ="subheading mb-3">@experience.Description</p>
                            <p>Från @experience.StartDate till @experience.EndDate</p>
                            @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                            {

                                <a href="@Url.Action("EditExperience", "Resume", new { exid = experience.ExId })" class="btn btn-secondary btn-sm">Redigera Erfarenheter</a>
                           
                                <form asp-action="DeleteExperience" asp-controller="Resume" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@experience.ExId" />
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Är du säker på att du vill radera denna erfarenhet?');">Radera Erfarenhet</button>
                                </form>
                            }
                        </div>
                    }
                }

                @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                {
                    <a href="@Url.Action("CreateExperience","Resume")" class="btn btn-primary btn-sm">Lägg till Erfarenhet</a>
                }
                <hr class="m-4" />

                @if (Model.User.userCV.Educations != null)
                {
                    <h2 class="mb-5">Utbildning</h2>
                    @foreach (var education in Model.User.userCV.Educations)
                    {
                        <div class="mb-3">
                            <h3 class="mb-0">@education.Institution</h3>
                            <p class="subheading mb-3">@education.Course, @education.Degree</p>
                            <p>Från @education.StartDate till @education.EndDate</p>
                            @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                            {
                             
                                <a href="@Url.Action("EditEducation", "Resume", new { edid = education.EdID })" class="btn btn-secondary btn-sm">Redigera Utbildning</a>

                                <form asp-action="DeleteEducation" asp-controller="Resume" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@education.EdID" />
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Är du säker på att du vill radera denna utbildning?');">Radera Utbildning</button>
                                </form>
                            }
                        </div>
                    }
                }
                @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                {
                    <a href="@Url.Action("CreateEducation","Resume")" class="btn btn-primary btn-sm">Lägg till Utbildning</a>
                }
                <hr class="m-4" />

                @if (Model.User.userCV.Qualifications != null)
                {
                    <h2 class="mb-5">Färdigheter</h2>
                    @foreach (var skill in Model.User.userCV.Qualifications)
                    {
                        <div class="mb-3">
                            <p class ="subheading mb-3">@skill.QName: @skill.Description</p>

                            @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                            {

                                <a href="@Url.Action("EditQualification", "Resume", new { qid = skill.QID })" class="btn btn-secondary btn-sm">Redigera Färdighet</a>
                                <form asp-action="DeleteQualification" asp-controller="Resume" method="post" class ="d-inline">
                                    <input type="hidden" name="id" value="@skill.QID" />
                                    <button type="submit" class=" btn btn-danger btn-sm" on-click="return confirm('Är du säker på att du vill radera denna färdighet?');">Radera Färdighet</button>

                                </form>
                        
                            }
                        </div>

                    }
                }
                @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                {
                    <a href="@Url.Action("CreateQualification","Resume")" class="btn btn-primary btn-sm">Lägg till Färdighet</a>
                }
                <hr class="m-4" />

                @if (Model.Projects != null)
                {
                    <h2 class="mb-5">Projekt</h2>
                    @foreach (Project p in Model.Projects)
                    {
                        <div class="mb-3">
                            <h3 class="mb-0">@p.ProjectName</h3>
                            <p class="subheading mb-3">@p.Description</p>
                            <p>Från: @p.Startdate</p>
                            <p>Till: @p.Enddate</p>
                            @foreach(ProjectMembers pm in p.listProjectmembers)
                            {
                                @if(pm.User.ProfileAccess && pm.User.Active)
                                {
                                    <img src="@Url.Action("UserImage", "Profile", new { userId = pm.User.Id })" class="rounded-circle mr-1" alt="@pm.User.Firstname @pm.User.Lastname" width="40" height="40">
                                    <span>@pm.User.Firstname @pm.User.Lastname</span>
                                }   
                            }
                        </div>
                    }
                
                    @if (User.Identity.IsAuthenticated && Model.User.UserName.Equals(User.Identity.Name))
                    {
                        <a href="@Url.Action("IndexProjekt","Projekt")" class="btn btn-primary btn-sm">Gå till projektsidan</a>
                    }
                }
                <hr class="m-4" />

                <h2 class="mb-5">Personligt brev</h2>
                <p>@Model.User.userCV.PersonalLetter</p>
                <hr class="m-4" />
              


                @if (!User.Identity.IsAuthenticated || !Model.User.UserName.Equals(User.Identity.Name))
                {
                    <div class="resume-section d-block">
                        <h2 class="mb-5">Vill du Kontakta @Model.User.Firstname</h2>
                        <div class="border-top">
                            <input type="text" class="form-control" placeholder="Skriv ditt meddelande" id="UnknowMessage" />
                            <div class="input-group">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <input type="text" disabled class="form-control" placeholder="Från: @User.Identity.Name" id="KnownUser" />
                                }
                                else
                                {
                                    <input type="text" class="form-control" placeholder="Ditt Namn" id="UnknowName" />
                                }
                                <button type="button" onclick="sendUnknownMessage()" class="btn btn-primary send-unknown-div" data-to-id=@Model.User.Id>Skicka</button>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <a href="@Url.Action("EditSummaryLetter", "Resume", new { id = Model.User.userCV.CVID })" class="btn btn-primary">Redigera Information</a>

                    <button type="button" class="btn btn-danger" onclick="confirmDeleteCV('@Model.User.Id')">Radera CV</button>
                }


            </div>
            
        </section>
    }
</div>